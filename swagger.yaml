openapi: 3.0.0
info:
  title: Shinr User Management API
  version: "1.0.0"
  description: API documentation for login and OTP verification

servers:
  - url: https://shinr-user-mgmt.onrender.com/

tags:
  - name: Auth
    description: Authentication endpoints
  - name: User Profile
    description: User profile and location endpoints

paths:
  /user/login/otp:
    post:
      tags:
        - Auth
      summary: Generate OTP for login
      description: Sends an OTP token for a mobile number. Creates user/device if not exists.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mobile
              properties:
                mobile:
                  type: string
      responses:
        "200":
          description: OTP generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      otpToken:
                        type: string
        "400":
          description: Bad Request
        "500":
          description: OTP generation failed

  /user/login/verify-otp:
    post:
      tags:
        - Auth
      summary: Verify OTP and generate access & refresh tokens
      description: Verifies the OTP for a user device and returns JWT tokens.
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: The unique ID of the device making the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - otpToken
                - otp
              properties:
                otpToken:
                  type: string
                otp:
                  type: string
      responses:
        "200":
          description: OTP verified successfully and tokens generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      refreshToken:
                        type: string
        "400":
          description: Invalid OTP or token
        "500":
          description: OTP verification failed

  /user/login/resend-otp:
    post:
      tags:
        - Auth
      summary: Resend OTP for a user device
      description: |
        Resends an OTP for a user device. 
        Validates the device, checks request count and cooldown (45 seconds), and generates a new OTP and token.
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: The unique ID of the device making the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - otpToken
              properties:
                otpToken:
                  type: string
                  description: The token from the previous OTP request
      responses:
        "200":
          description: OTP resent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OTP resent successfully
                  data:
                    type: object
                    properties:
                      otpToken:
                        type: string
                        description: New OTP token to be used for verification
        "400":
          description: Bad request due to invalid device or no active OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No active OTP request
                  code:
                    type: string
                    example: NO_ACTIVE_OTP
        "429":
          description: OTP request blocked due to cooldown or limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OTP resend cooldown
                  code:
                    type: string
                    example: OTP_RESEND_COOLDOWN
        "500":
          description: Failed to resend OTP due to server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to resend OTP. Please try again later.
                  code:
                    type: string
                    example: OTP_RESEND_FAILED

  /user/login/generate-refreshToken:
    post:
      tags:
        - Auth
      summary: Refresh Access and Refresh Tokens
      description: >
        Refreshes the user's access and refresh tokens using a valid refresh token.  
        The endpoint validates the refresh token, device identity, and user status before issuing new tokens.
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: The unique ID of the device making the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: The refresh token issued during login.
      responses:
        "200":
          description: Tokens refreshed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Tokens refreshed
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        description: Newly generated access token
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refreshToken:
                        type: string
                        description: Newly generated refresh token
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "400":
          description: Invalid request or token validation failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Failed to refresh token. Please login again.
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: INVALID_DEVICE_ID
                      details:
                        type: string
                        example: The device requesting token refresh does not match the device that owns the token.
        "401":
          description: Unauthorized - Token is invalid or expired.
        "500":
          description: Internal Server Error - Token refresh failed unexpectedly.
      security: []  # No access token required; refresh token only

  /user/logout:
    post:
      tags:
        - Auth
      summary: Logout user and invalidate tokens
      description: |
        Logs out the currently authenticated user from the specified device.  
        Invalidates all active refresh tokens for that device and removes the device record from the database.
      security:
        - bearerAuth: []   # Uses Authorization: Bearer <accessToken>
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Unique device identifier for the user session
      responses:
        "200":
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
                  data:
                    type: object
                    example: {}
        "401":
          description: Unauthorized - Missing or invalid access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access token missing or invalid
        "404":
          description: User or device not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User or device not found or already logged out
        "500":
          description: Logout failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to logout. Please try again later.

  /user-profile/location-autocomplete:
    get:
      tags:
        - User Profile
      summary: Get location suggestions by search query
      description: >
        Fetches autocomplete suggestions for locations based on a search query.
        Requires authorization and validates that the search term is at least 3 characters long.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: search
          required: true
          schema:
            type: string
            minLength: 3
          description: Search term for location autocomplete (minimum 3 characters)
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Unique device identifier for the request
      responses:
        "200":
          description: Autocomplete results fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Autocomplete suggestions fetched successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        addressLine1:
                          type: string
                        country:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        pinCode:
                          type: string
                        latitude:
                          type: string
                        longitude:
                          type: string
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalPages:
                        type: integer
        "400":
          description: Invalid search parameter
        "401":
          description: Unauthorized - Missing or invalid bearer token
        "500":
          description: Failed to fetch autocomplete suggestions

  /user-profile/get-location/reverse-geocode:
    post:
      tags:
        - User Profile
      summary: Get address from latitude and longitude
      description: >
        Fetches the address details (like city, state, country, pinCode, etc.) from given latitude and longitude.
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: The unique ID of the device making the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - lat
                - lng
              properties:
                lat:
                  type: string
                  example: "12.9716"
                lng:
                  type: string
                  example: "77.5946"
      responses:
        "201":
          description: Address fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Address fetched successfully
                  data:
                    type: object
                    properties:
                      location:
                        type: object
                        description: Reverse geocoded address details
                        example:
                          name: John Doe
                          addressLine1: MG Road
                          city: Bangalore
                          state: Karnataka
                          country: India
                          pinCode: 560001
                          latitude: 12.9716
                          longitude: 77.5946
        "400":
          description: Invalid latitude or longitude
        "401":
          description: Unauthorized - Missing or invalid bearer token
        "500":
          description: Failed to fetch address due to server error

  /user-profile/add-address:
    post:
      tags:
        - User Profile
      summary: Add a new address for the user
      description: Adds a new address for the authenticated user with optional nickname.
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Unique device identifier for the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - addressLine1
                - country
                - city
                - state
                - pinCode
                - latitude
                - longitude
              properties:
                nickName:
                  type: string
                  description: Optional nickname for the address
                name:
                  type: string
                  description: Name associated with the address
                addressLine1:
                  type: string
                country:
                  type: string
                city:
                  type: string
                state:
                  type: string
                pinCode:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
      responses:
        "201":
          description: Address saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      addressId:
                        type: number
                      nickName:
                        type: string
                      isDefault:
                        type: boolean
                      address:
                        type: object
                        properties:
                          name:
                            type: string
                          addressLine1:
                            type: string
                          country:
                            type: string
                          city:
                            type: string
                          state:
                            type: string
                          pinCode:
                            type: string
                          latitude:
                            type: number
                          longitude:
                            type: number
                      savedAt:
                        type: string
                        format: date-time
        "400":
          description: Validation or bad request
        "401":
          description: Unauthorized
        "500":
          description: Failed to save address

  /user-profile/remove-address/{id}:
    post:
      tags:
        - User Profile
      summary: Remove an address by ID
      description: Deactivates an address of the authenticated user using the address ID.
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Unique device identifier for the request
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the address to remove
      responses:
        "200":
          description: Address removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Address removed successfully
                  data:
                    type: object
                    properties:
                      updated:
                        type: number
                        example: 1
                      addressId:
                        type: number
        "400":
          description: Invalid address ID
        "401":
          description: Unauthorized
        "404":
          description: Address not found
        "500":
          description: Failed to remove address

  /user-profile/select-address/{id}:
    post:
      tags:
        - User Profile
      summary: Select an address by ID
      description: Marks a specific address as selected for the authenticated user.
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Unique device identifier for the request
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the address to select
      responses:
        "200":
          description: Address selected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Address selected successfully
                  data:
                    type: object
                    properties:
                      selected:
                        type: number
                        example: 1
                      addressId:
                        type: number
                        example: 12
                      address:
                        type: object
                        description: Selected address details
                        example:
                          id: 12
                          name: John Doe
                          addressLine1: MG Road
                          city: Bangalore
                          state: Karnataka
                          country: India
                          pinCode: 560001
                          latitude: 12.9716
                          longitude: 77.5946
        "400":
          description: Invalid address ID
        "401":
          description: Unauthorized
        "404":
          description: Address not found
        "500":
          description: Failed to select address

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
